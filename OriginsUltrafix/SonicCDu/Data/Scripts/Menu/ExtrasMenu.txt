//----------------Sonic CD Extras Menu Script-----------------//
//--------Scripted by Christian Whitehead 'The Taxman'--------//
//-------Unpacked By Rubberduckycooly's Script Unpacker-------//

// Aliases
#alias Object.Value0			:	Object.Timer
#alias Object.Value1			:	Object.CurrentButton

//Object[+4] and [+ArrayPos0] are blank objects just to add values
#alias Object[+4].Value1		:	Helper.VMCurrentButton
#alias Object.Value2			:	Helper.FlickerState

//Object[33] is MenuHeading
#alias Object[33].State			:	MenuHeading.State
#alias Object[33].PropertyValue	:	MenuHeading.Header

//Object[-1] is MenuWindow
#alias Object[-1].State			:	MenuWindow.State
#alias Object[1].Value4			:	MenuWindow.BackTouchPress

// States
#alias 0 	:	EXTRASMENU_ENTER_MENU
#alias 1 	:	EXTRASMENU_CONTROLS
#alias 2 	:	EXTRASMENU_SELECTED_OPTION
#alias 3 	:	EXTRASMENU_LOAD_EXTRA_STAGE
#alias 4 	:	EXTRASMENU_LOAD_VISUALMODE
#alias 5 	:	EXTRASMENU_VISUALMODE_FADEIN
#alias 6 	:	EXTRASMENU_VISUALMODE
#alias 7 	:	EXTRASMENU_VISUALMODE_SELECTED
#alias 8 	:	EXTRASMENU_VISUALMODE_VIDEOPLAY
#alias 9 	:	EXTRASMENU_VISUALMODE_FADEOUT
#alias 10	:	EXTRASMENU_VISUALMODE_RETURN
#alias 11	:	EXTRASMENU_EXIT_MENU
#alias 12	:	EXTRASMENU_FADEIN
#alias 13	:	EXTRASMENU_RETURN_TO_TITLE

// Menu Heading States
#alias 1	:	MENUHEADING_LEAVE_SCREEN

// Menu Heading Property Values
#alias 5	:	MAINMENU_HEADER

// Menu Window States
#alias 3	:	MENUWINDOW_SHRINK

// Menu Button States
#alias 1	:	MENUBUTTON_BUTTONS_IN

// Presentation Stages
#alias 0	:	STAGE_P_TITLE
#alias 3	:	STAGE_P_STAGESELECT
#alias 4	:	STAGE_P_SOUNDTEST
#alias 5	:	STAGE_P_DAGARDEN

// Global SFX
#alias 23	:	SFX_G_MENUBUTTON
#alias 27	:	SFX_G_SELECT

// Stage SFX
#alias 1	:	SFX_S_BACKBUTTON

// Languages
#alias 0	:	LANG_ENGLISH
#alias 1	:	LANG_FRENCH
#alias 2	:	LANG_ITALIAN
#alias 3	:	LANG_DEUTSCH
#alias 4	:	LANG_SPANISH
#alias 5	:	LANG_JAPANESE

// Soundtrack
#alias 0	:	OST_JP

//Engine & CallBacks
#alias 2	:	MESSAGE_LOSTFOCUS

// Function declarations
#function ExtrasMenu_DrawUnlocks


function ExtrasMenu_DrawUnlocks
end function


sub ObjectMain
	switch Object.State
	case EXTRASMENU_ENTER_MENU
		Object.State = EXTRASMENU_LOAD_VISUALMODE

		Object.XPos  = Screen.CenterX
		Object.XPos -= 126
		if Object.Timer < 256
			Object.Alpha  = Object.Timer
			Object.Timer += 6
		else
			Object.Timer = 0
			Object.Alpha = 255
		end if
		break

	case EXTRASMENU_LOAD_VISUALMODE
		TempValue0  = Screen.CenterY
		TempValue0 -= 87
		Object.YPos = 33
		Object.State++
		Object.Alpha = 0
		Helper.VMCurrentButton = 0
		break
		
	case EXTRASMENU_VISUALMODE_FADEIN
		if Object.Timer < 256
			Object.Alpha  = Object.Timer
			Object.Timer += 8
		else
			Object.Timer = 0
			Object.Alpha = 255
			Object.State++
		end if
		break

	case EXTRASMENU_VISUALMODE
		ArrayPos0 = Object.CurrentButton
#platform: Standard
		CheckResult = true
#endplatform

#platform: Mobile
		CheckEqual(Options.PhysicalControls,true)
#endplatform

#platform: Use_Origins
		CheckEqual(Options.PhysicalControls,true)
#endplatform

		// 2011 Steam lacks Options.PhysicalControls, so we force it here first and the other platforms can override it
		if CheckResult == true
			if KeyPress[0].Up == true
				Helper.VMCurrentButton--
				PlaySfx(SFX_G_MENUBUTTON, false)
				if Helper.VMCurrentButton < 0
					Helper.VMCurrentButton = 4
				end if
			end if

			if KeyPress[0].Down == true
				Helper.VMCurrentButton++
				PlaySfx(SFX_G_MENUBUTTON, false)
				if Helper.VMCurrentButton > 4
					Helper.VMCurrentButton = 0
				end if
			end if

		end if

#platform: Mobile
		// Just to make it look neat, instead of continuing the code from an open if on another platform, we ask again for a check in the physical controls
		if Options.PhysicalControls == true
			CheckTouchRect(0, 0, Screen.XSize, Screen.YSize)		//Touch Behaviour Check
			if CheckResult > -1
				Options.PhysicalControls = false
				Helper.VMCurrentButton = -1
			end if

		else
			if Engine.Message == MESSAGE_LOSTFOCUS
				Helper.VMCurrentButton = -1
			end if
			CheckTouchRect(0, 0, Screen.XSize, Screen.YSize)		//Touch Input Reset
			TempValue3 = CheckResult

			TempValue0  = Screen.CenterX
			TempValue0 -= 88
			TempValue1  = Screen.CenterX
			TempValue1 -= 40
			CheckTouchRect(TempValue0, 72, TempValue1, 120)			//Opening Touch Press
			if CheckResult > -1
				Helper.VMCurrentButton = 0
			else
				if TempValue3 < 0
					if Helper.VMCurrentButton == 0
						KeyPress[0].Start = true
					end if
				else
					if Helper.VMCurrentButton == 0
						Helper.VMCurrentButton = -1
					end if
				end if
			end if

			CheckTouchRect(TempValue0, 129, TempValue1, 177)		//Good Ending Touch Press
			if CheckResult > -1
				Helper.VMCurrentButton = 2
			else
				if TempValue3 < 0
					if Helper.VMCurrentButton == 2
						KeyPress[0].Start = true
					end if
				else
					if Helper.VMCurrentButton == 2
						Helper.VMCurrentButton = -1
					end if
				end if
			end if
			
			TempValue0  = Screen.CenterX
			TempValue0 += 40
			TempValue1  = Screen.CenterX
			TempValue1 += 88
			CheckTouchRect(TempValue0, 72, TempValue1, 120)			//Pencil Test Touch Press
			if CheckResult > -1
				Helper.VMCurrentButton = 1
			else
				if TempValue3 < 0
					if Helper.VMCurrentButton == 1
						KeyPress[0].Start = true
					end if
				else
					if Helper.VMCurrentButton == 1
						Helper.VMCurrentButton = -1
					end if
				end if
			end if

			CheckTouchRect(TempValue0, 129, TempValue1, 177)		//Bad Ending Touch Press
			if CheckResult > -1
				Helper.VMCurrentButton = 3
			else
				if TempValue3 < 0
					if Helper.VMCurrentButton == 3
						KeyPress[0].Start = true
					end if
				else
					if Helper.VMCurrentButton == 3
						Helper.VMCurrentButton = -1
					end if
				end if
			end if

			TempValue0  = Screen.XSize
			TempValue0 -= 96
			CheckTouchRect(TempValue0, 192, Screen.XSize, Screen.YSize)		//Back Touch Press
			if CheckResult > -1
				Helper.VMCurrentButton = 4
				MenuWindow.BackTouchPress = true
			else
				MenuWindow.BackTouchPress = false
				if TempValue3 < 0
					if Helper.VMCurrentButton == 4
						KeyPress[0].ButtonB = true
					end if
				else
					if Helper.VMCurrentButton == 4
						Helper.VMCurrentButton = -1
					end if
				end if
			end if
			//Turn on Physical Controls
			if KeyPress[0].Left == true
				Helper.VMCurrentButton = 1
				Options.PhysicalControls = true
			end if

			if KeyPress[0].Right == true
				Helper.VMCurrentButton = 0
				Options.PhysicalControls = true
			end if

			if KeyPress[0].Up == true
				Helper.VMCurrentButton = 3
				Options.PhysicalControls = true
			end if

			if KeyPress[0].Down == true
				Helper.VMCurrentButton = 0
				Options.PhysicalControls = true
			end if
		end if
#endplatform

		CheckResult = false

		if Helper.VMCurrentButton > -1
			if KeyPress[0].Start == true
				CheckResult = true
			end if

			if KeyPress[0].ButtonA == true
				CheckResult = true
			end if
		end if

		if CheckResult == true
			PlaySfx(SFX_G_SELECT, false)
			StopMusic()
			if Helper.VMCurrentButton == 0
				Object.State = EXTRASMENU_RETURN_TO_TITLE
				Object.Timer = 0
				StopMusic()
			else
				Object.State++
			end if
		end if

		if KeyPress[0].ButtonB == true
			Object.State = EXTRASMENU_RETURN_TO_TITLE
			Object.Timer = 0
			StopMusic()
		end if
		break

	case EXTRASMENU_VISUALMODE_SELECTED
		if Object.Timer < 30
			Object.Timer++
		else
			Object.Timer = 0
			Object.State++
		end if

		break

	case EXTRASMENU_VISUALMODE_VIDEOPLAY
		if Object.Timer < 384
			Object.Timer += 8
		else
#platform: Use_Origins
			game.callbackParam0 = 1
			EngineCallback(NOTIFY_EXTRAS_MODE)
#endplatform

			switch Helper.VMCurrentButton
			case 1
				LoadVideo("Opening")
				break

			case 2
				LoadVideo("Good_Ending")
				break

			case 3
				LoadVideo("Bad_Ending")
				break

			case 4
				LoadVideo("Pencil_Test")
				break

			end switch

#platform: Use_Origins
			game.callbackParam0 = 0
			EngineCallback(NOTIFY_EXTRAS_MODE)
#endplatform

#platform: Mobile
			Helper.VMCurrentButton = -1
#endplatform

			Object.State = EXTRASMENU_FADEIN
		end if
		
		TempValue0 = Object.Timer
		if TempValue0 > 255
			TempValue0 = 255
		end if
		SetScreenFade(0, 0, 0, TempValue0)
		break

	case EXTRASMENU_VISUALMODE_FADEOUT
		if Object.Timer > 0
			Object.Alpha  = Object.Timer
			Object.Timer -= 8
		else
			Object.Alpha = 0
			Object.State++
		end if
		break

	case EXTRASMENU_VISUALMODE_RETURN
		TempValue0  = Object.CurrentButton
		TempValue0 *= 40
		TempValue0 += Screen.CenterY
		TempValue0 -= 87
		if Object.YPos < TempValue0
			Object.YPos += 8
			if Object.YPos > TempValue0
				Object.YPos = TempValue0
			end if
			Object.Alpha = 0
		else
#platform: Use_Origins
			if Options.PhysicalControls == false
				Object.CurrentButton = -1
			end if
#endplatform

#platform: Mobile
			if Options.PhysicalControls == false
				Object.CurrentButton = -1
			end if
#endplatform
			Object.State = EXTRASMENU_CONTROLS
			Object.Alpha = 255
		end if
		break

	case EXTRASMENU_FADEIN
		if Object.Timer > 0
			Object.Timer -= 8
		else
			Object.State = EXTRASMENU_VISUALMODE
			PlayMusic(Options.Soundtrack)
		end if
		TempValue0 = Object.Timer
		if TempValue0 > 255
			TempValue0 = 255
		end if
		SetScreenFade(0, 0, 0, TempValue0)
		break

	case EXTRASMENU_RETURN_TO_TITLE
		Object.Timer += 4
		if Object.Timer == 384
			Stage.ActiveList = PRESENTATION_STAGE
			Stage.ListPos	 = STAGE_P_TITLE
			LoadStage()
		end if
		SetScreenFade(0, 0, 0, Object.Timer)
		break

	end switch
end sub


sub ObjectDraw

	TempValue3 = Screen.CenterX
	Tempvalue3 += 22
	TempValue4 = Screen.CenterY
	Tempvalue4 -= 70
	DrawSpriteScreenFX(11, FX_INK, TempValue3, TempValue4)
	Tempvalue4 += 78
	Tempvalue3 += 10
	DrawSpriteScreenFX(10, FX_INK, TempValue3, TempValue4)

	Tempvalue4 += 1
	Tempvalue3 += 1
	//DrawSpriteScreenFX(4, FX_INK, TempValue0, 93)

	if Helper.VMCurrentButton == 0
		DrawSpriteScreenFX(12, FX_INK, TempValue3, tempvalue4)
	end if

	//DrawSpriteScreenFX(6, FX_INK, TempValue0, 153)
	Tempvalue4 += 16
	if Helper.VMCurrentButton == 1
		DrawSpriteScreenFX(13, FX_INK, TempValue3, tempvalue4)
	end if

	//DrawSpriteScreenFX(5, FX_INK, TempValue0, 96)
	Tempvalue4 += 16
	if Helper.VMCurrentButton == 2
		DrawSpriteScreenFX(14, FX_INK, TempValue3, tempvalue4)
	end if

	//DrawSpriteScreenFX(7, FX_INK, TempValue0, 153)
	Tempvalue4 += 16
	if Helper.VMCurrentButton == 3
		DrawSpriteScreenFX(15, FX_INK, TempValue3, tempvalue4)
	end if

	Tempvalue4 += 16
	if Helper.VMCurrentButton == 4
		DrawSpriteScreenFX(16, FX_INK, TempValue3, tempvalue4)
	end if

	Object.Alpha = 255
end sub


sub ObjectStartup
	switch Engine.Language
	case LANG_ENGLISH
		LoadSpriteSheet("Menu/MenuGfx2_EN.gif")
		break

	case LANG_FRENCH
		LoadSpriteSheet("Menu/MenuGfx2_FR.gif")
		break

	case LANG_ITALIAN
		LoadSpriteSheet("Menu/MenuGfx2_IT.gif")
		break

	case LANG_DEUTSCH
		LoadSpriteSheet("Menu/MenuGfx2_DE.gif")
		break

	case LANG_SPANISH
		LoadSpriteSheet("Menu/MenuGfx2_ES.gif")
		break

	case LANG_JAPANESE
		LoadSpriteSheet("Menu/MenuGfx2_JP.gif")
		break

	end switch

	SpriteFrame(4, 2, 32, 32, 479, 34)			// #0 - Gear
	SpriteFrame(4, 2, 32, 32, 479, 359)			// #1 - Lock Gear
	SpriteFrame(4, 2, 32, 32, 479, 34)			// #2 - Gear 2
	SpriteFrame(4, 2, 32, 32, 479, 34)			// #3 - Gear 3

	SpriteFrame(-18, -18, 36, 36, 476, 106)		// #4 - Opening Icon
	SpriteFrame(-18, -18, 36, 36, 476, 143)		// #5 - Pencil Test
	SpriteFrame(-18, -18, 36, 36, 476, 285)		// #6 - Good Ending
	SpriteFrame(-18, -18, 36, 36, 476, 322)		// #7 - Bad Ending

	SpriteFrame(45, 12, 13, 13, 488, 1)			// #8 - Orange Triangle
	SpriteFrame(0, 0, 250, 37, 259, 421)		// #9 - Selection Border

	SpriteFrame(8, 0, 88,80, 258, 683)		// #10 Blank
	SpriteFrame(8, 0, 95, 71, 162, 683)		// #11 Visual Mode NEW
	SpriteFrame(8, 0, 28, 11, 347, 683)		// #12 Exit
	SpriteFrame(8, 0, 54, 11, 347, 695)		// #13 Opening
	SpriteFrame(8, 0, 86, 11, 347, 707)		// #14 Good Ending
	SpriteFrame(8, 0, 78, 11, 347, 719)		// #15 Bad Ending
	SpriteFrame(8, 0, 79, 11, 347, 731)		// #16 Pencil Test
	SpriteFrame(8, 0, 16, 76, 486, 121)		// #17 Blank
	
	SpriteFrame(-48, 25, 96, 8, 1, 496)			// #18 - Opening Text
	SpriteFrame(-48, 25, 96, 8, 1, 504)			// #19 - Pencil Test Text
	SpriteFrame(-48, 25, 96, 8, 98, 496)		// #20 - Good Ending
	SpriteFrame(-48, 25, 96, 8, 98, 504)		// #21 - Bad Ending

	SpriteFrame(-48, 25, 96, 8, 195, 496)		// #22 - Opening Text Highlight
	SpriteFrame(-48, 25, 96, 8, 195, 504)		// #23 - Pencil Test Text Highlight
	SpriteFrame(-48, 25, 96, 8, 292, 496)		// #24 - Good Ending Text Highlight
	SpriteFrame(-48, 25, 96, 8, 292, 504)		// #25 - Bad Ending Text Highlight

	SpriteFrame(-24, -24, 48, 48, 405, 88)		// #26 - Icon Border
end sub


// ========================
// Editor Subs
// ========================

sub RSDKDraw
	DrawSprite(0)
end sub


sub RSDKLoad
	LoadSpriteSheet("Menu/MenuGfx2_EN.gif")
	SpriteFrame(32, 0, 160, 30, 1, 708)			// #8 Extras

	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end sub
