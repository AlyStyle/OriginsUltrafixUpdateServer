//----------Sonic CD DebugMode / TouchControls Script---------//
//--------Scripted by Christian Whitehead 'The Taxman'--------//
//-------Unpacked By Rubberduckycooly's Script Unpacker-------//

// Aliases
#alias Object.Value0	:	Object.Fade
#alias Object.Value1	:	Object.PauseFade
#alias Object.Value2	:	Object.PauseXPos
#alias Object.Value3	:	Object.AButtonXPos
#alias Object.Value4	:	Object.DPadXPos
#alias Object.Value6	:	Object.HelperSprite
#alias SaveRAM[6000]: DebugMode_ObjectCount
#alias SaveRAM[6001]: DebugMode_CurrentSelection
#alias 6002: DebugMode_TableStart

// Ink Effects
#alias 2	:	INK_ALPHA

// Player
#alias 1	:	PLAYER_TAILS_A

// Control Mode
#alias 0	:	CONTROLMODE_NORMAL

// Priority
#alias 1	:	PRIORITY_ACTIVE
#alias 4	:	PRIORITY_BOUNDS_DESTROY

// Function declarations
#function DebugMode_AddObject
#function DebugMode_BlankSpawn
#function DebugMode_BlankDraw

function DebugMode_AddObject
	ArrayPos0 = DebugMode_ObjectCount
	ArrayPos0 *= 3
	ArrayPos0 += DebugMode_TableStart
	SaveRAM[ArrayPos0] = TempValue0
	ArrayPos0++
	SaveRAM[ArrayPos0] = TempValue1
	ArrayPos0++
	SaveRAM[ArrayPos0] = TempValue2
	DebugMode_ObjectCount++
endfunction

function DebugMode_BlankSpawn
	TempValue0 = 0
endfunction

function DebugMode_BlankDraw
	DrawSpriteXY(0, Player.XPos, Player.YPos)
endfunction


sub ObjectMain
// a bit messy, isn't it? blame mobile version for not having debug mode :)
#platform: Standard
	TempValue0 = false
	if KeyDown[1].Left == true
		Player.XPos -= Player.YVelocity
		TempValue0 = true
	end if

	if KeyDown[1].Right == true
		Player.XPos += Player.YVelocity
		TempValue0 = true
	end if

	if KeyDown[1].Up == true
		Player.YPos -= Player.YVelocity
		TempValue0 = true
	end if

	if KeyDown[1].Down == true
		Player.YPos += Player.YVelocity
		TempValue0 = true
	end if

	if TempValue0 == true
		Player.YVelocity += 0xC00
		if Player.YVelocity > 0x100000
			Player.YVelocity = 0x100000
		end if
	else
		Player.YVelocity = 0
	end if
#endplatform

	if KeyPress[1].ButtonB == true
	
#platform: Standard
		Object.HelperSprite = 0
		Object.Type = TypeName[Player Object]
		// THEY #FIXED HIM!!!
		if Stage.PlayerListPos == PLAYER_TAILS_A // PLAYER_TAILS in origins
			Object[+1].Type = TypeName[Tails Object]
		end if
		Player.Speed	 = 0
		Player.Rotation  = 0
		Player.XVelocity = 0
		Player.YVelocity = 0
#endplatform

#platform: Use_Origins
		Player.State = Player_State_Air_NoDropDash
#endplatform

#platform: Use_Standalone
	#platform: Standard
		Player.State = Player_State_Air
	#endplatform
#endplatform

#platform: Standard
		Player.Animation	  = ANI_WALKING
		Player.AnimationSpeed = 0
		Player.Frame		  = 0

		Player.ControlMode		 = CONTROLMODE_NORMAL
		Player.ObjectInteraction = true
#endplatform
	else
		if KeyPress[0].ButtonA == true
#platform: Standard
			DebugMode_CurrentSelection++
#endplatform
			
#platform: Use_Origins
			// These two checks were introduced in Origins 1.04, to prevent the player from spawning Coin Monitors in Debug Mode
			if game.coinMode == true
				if DebugMode_CurrentSelection == 5
					DebugMode_CurrentSelection++
				end if
			end if
#endplatform
#platform: Standard

			if DebugMode_CurrentSelection >= DebugMode_ObjectCount
				DebugMode_CurrentSelection = 0
			end if
#endplatform
		end if

		if KeyDown[0].ButtonA == true
			if KeyPress[0].ButtonC == true
#platform: Standard
				DebugMode_CurrentSelection--
#endplatform
				
#platform: Use_Origins
				// Similarly to above, this part's also new to Origins 1.0.4 and prevents coin inflation
				
				if game.coinMode == true
					if DebugMode_CurrentSelection == 5
						DebugMode_CurrentSelection--
					end if
				end if

#endplatform
#platform: Standard
				if DebugMode_CurrentSelection < 0
					DebugMode_CurrentSelection = DebugMode_ObjectCount
					DebugMode_CurrentSelection--
				end if
#endplatform
			end if
		else
#platform: Standard
			if KeyPress[0].ButtonC == true
				ArrayPos0=DebugMode_CurrentSelection
				ArrayPos0*=3
				ArrayPos0+=DebugMode_TableStart
				ArrayPos0+=2
				CallFunction(SaveRAM[ArrayPos0])
				Object[TempObjectPos].Priority=4
			end if
#endplatform
		end if
	end if
end sub


sub ObjectDraw
	
#platform: Standard
	ArrayPos0 = DebugMode_CurrentSelection
	ArrayPos0 *= 3
	ArrayPos0 += DebugMode_TableStart
	Object.Type = SaveRAM[ArrayPos0]
	ArrayPos0++
	CallFunction(SaveRAM[ArrayPos0])
	Object.Type = TypeName[DebugMode]
#endplatform
	
#platform: Mobile
	if Options.TouchControls == false
		TempValue0 = -1
	else
		TempValue0 = Player.ControlMode
	end if
	
	if TempValue0 == false
		if Stage.State != STAGE_PAUSED
			if Object.Fade < 160
				Object.Fade += 4
				Object.PauseFade   = Object.Fade
				Object.PauseFade <<= 1
			end if
			
			Object.Alpha = Object.Fade
			DrawSpriteScreenFX(0, FX_INK, Object.DPadXPos, 160)

			if Player.Left == true
				Object.Alpha = 160
				DrawSpriteScreenFX(7, FX_INK, Object.DPadXPos, 160)
			else
				Object.Alpha = Object.Fade
				DrawSpriteScreenFX(3, FX_INK, Object.DPadXPos, 160)
			end if

			if Player.Down == true
				Object.Alpha = 160
				DrawSpriteScreenFX(6, FX_INK, Object.DPadXPos, 160)
			else
				Object.Alpha = Object.Fade
				DrawSpriteScreenFX(2, FX_INK, Object.DPadXPos, 160)
			end if

			if Player.Right == true
				Object.Alpha = 160
				DrawSpriteScreenFX(8, FX_INK, Object.DPadXPos, 160)
			else
				Object.Alpha = Object.Fade
				DrawSpriteScreenFX(4, FX_INK, Object.DPadXPos, 160)
			end if

			if Player.Up == true
				Object.Alpha = 160
				DrawSpriteScreenFX(5, FX_INK, Object.DPadXPos, 160)
			else
				Object.Alpha = Object.Fade
				DrawSpriteScreenFX(1, FX_INK, Object.DPadXPos, 160)
			end if

			if Player.JumpHold == true
				Object.Alpha = 160
				DrawSpriteScreenFX(10, FX_INK, Object.AButtonXPos, 176)
			else
				Object.Alpha = Object.Fade
				DrawSpriteScreenFX(9, FX_INK, Object.AButtonXPos, 176)
			end if
		else
			Object.Fade = 0
		end if

		if Object.PauseFade < 256
			Object.Alpha = Object.PauseFade
			DrawSpriteScreenFX(11, FX_INK, Object.PauseXPos, 8)
		else
			DrawSpriteScreenXY(11, Object.PauseXPos, 8)
		end if
	else
		if Object.Fade > 0
			Object.Fade		 -= 4
			Object.PauseFade -= 8
		end if

		Object.Alpha = Object.Fade
		if Object.Alpha > 0
			DrawSpriteScreenFX(0, FX_INK, Object.DPadXPos, 160)
			DrawSpriteScreenFX(1, FX_INK, Object.DPadXPos, 160)
			DrawSpriteScreenFX(4, FX_INK, Object.DPadXPos, 160)
			DrawSpriteScreenFX(2, FX_INK, Object.DPadXPos, 160)
			DrawSpriteScreenFX(3, FX_INK, Object.DPadXPos, 160)
			DrawSpriteScreenFX(9, FX_INK, Object.AButtonXPos, 176)
		end if

		if Object.PauseFade < 0
			Object.Alpha = 0
		else
			Object.Alpha = Object.PauseFade
		end if

		if Object.PauseFade < 256
			Object.Alpha = Object.PauseFade
			DrawSpriteScreenFX(11, FX_INK, Object.PauseXPos, 8)
		else
			DrawSpriteScreenXY(11, Object.PauseXPos, 8)
		end if
	end if
#endplatform
end sub


sub ObjectStartup
#platform: Standard
	// Setting dummy data here, you should probably load all the global objects here because this object is the last in the global list
	DebugMode_ObjectCount = 0
	DebugMode_CurrentSelection = 0
	ArrayPos0 = DebugMode_TableStart
	SaveRAM[ArrayPos0] = TypeName[Ring]
	ArrayPos0++
	SaveRAM[ArrayPos0] = Ring_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = Ring_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Monitor]
	ArrayPos0++
	SaveRAM[ArrayPos0] = Monitor_Ring_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = Monitor_Ring_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Monitor]
	ArrayPos0++
	SaveRAM[ArrayPos0] = Monitor_Shield_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = Monitor_Shield_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Monitor]
	ArrayPos0++
	SaveRAM[ArrayPos0] = Monitor_Invinc_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = Monitor_Invinc_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Monitor]
	ArrayPos0++
	SaveRAM[ArrayPos0] = Monitor_Shoes_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = Monitor_Shoes_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Monitor]
	ArrayPos0++
	SaveRAM[ArrayPos0] = Monitor_Life_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = Monitor_Life_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Monitor]
	ArrayPos0++
	SaveRAM[ArrayPos0] = Monitor_Clock_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = Monitor_Clock_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Monitor]
	ArrayPos0++
	SaveRAM[ArrayPos0] = Monitor_SUPER_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = Monitor_SUPER_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Red Spring]
	ArrayPos0++
	SaveRAM[ArrayPos0] = RSpring_Up_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = RSpring_Up_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Red Spring]
	ArrayPos0++
	SaveRAM[ArrayPos0] = RSpring_Right_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = RSpring_Right_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Red Spring]
	ArrayPos0++
	SaveRAM[ArrayPos0] = RSpring_Left_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = RSpring_Left_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Red Spring]
	ArrayPos0++
	SaveRAM[ArrayPos0] = RSpring_Down_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = RSpring_Down_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Red Spring]
	ArrayPos0++
	SaveRAM[ArrayPos0] = RSpring_DiagUR_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = RSpring_DiagUR_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Red Spring]
	ArrayPos0++
	SaveRAM[ArrayPos0] = RSpring_DiagUL_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = RSpring_DiagUL_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Red Spring]
	ArrayPos0++
	SaveRAM[ArrayPos0] = RSpring_DiagDR_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = RSpring_DiagDR_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Red Spring]
	ArrayPos0++
	SaveRAM[ArrayPos0] = RSpring_DiagDL_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = RSpring_DiagDL_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Yellow Spring]
	ArrayPos0++
	SaveRAM[ArrayPos0] = YSpring_Up_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = YSpring_Up_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Yellow Spring]
	ArrayPos0++
	SaveRAM[ArrayPos0] = YSpring_Right_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = YSpring_Right_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Yellow Spring]
	ArrayPos0++
	SaveRAM[ArrayPos0] = YSpring_Left_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = YSpring_Left_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Yellow Spring]
	ArrayPos0++
	SaveRAM[ArrayPos0] = YSpring_Down_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = YSpring_Down_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Yellow Spring]
	ArrayPos0++
	SaveRAM[ArrayPos0] = YSpring_DiagUR_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = YSpring_DiagUR_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Yellow Spring]
	ArrayPos0++
	SaveRAM[ArrayPos0] = YSpring_DiagUL_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = YSpring_DiagUL_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Yellow Spring]
	ArrayPos0++
	SaveRAM[ArrayPos0] = YSpring_DiagDR_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = YSpring_DiagDR_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Yellow Spring]
	ArrayPos0++
	SaveRAM[ArrayPos0] = YSpring_DiagDL_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = YSpring_DiagDL_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Spikes]
	ArrayPos0++
	SaveRAM[ArrayPos0] = Spikes_Up_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = Spikes_Up_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Spikes]
	ArrayPos0++
	SaveRAM[ArrayPos0] = Spikes_Right_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = Spikes_Right_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Spikes]
	ArrayPos0++
	SaveRAM[ArrayPos0] = Spikes_Left_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = Spikes_Left_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Spikes]
	ArrayPos0++
	SaveRAM[ArrayPos0] = Spikes_Down_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = Spikes_Down_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Lamp Post]
	ArrayPos0++
	SaveRAM[ArrayPos0] = LampPost_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = LampPost_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Future Post]
	ArrayPos0++
	SaveRAM[ArrayPos0] = FuturePost_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = FuturePost_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Past Post]
	ArrayPos0++
	SaveRAM[ArrayPos0] = PastPost_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = PastPost_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Goal Post]
	ArrayPos0++
	SaveRAM[ArrayPos0] = GoalPost_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = GoalPost_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Sign Post]
	ArrayPos0++
	SaveRAM[ArrayPos0] = SignPost_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = SignPost_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
	SaveRAM[ArrayPos0] = TypeName[Special Ring]
	ArrayPos0++
	SaveRAM[ArrayPos0] = SpecialRing_DebugDraw
	ArrayPos0++
	SaveRAM[ArrayPos0] = SpecialRing_DebugSpawn
	ArrayPos0++
	DebugMode_ObjectCount++
#endplatform

#platform: Use_Origins
	CheckEqual(game.coinMode, false)
#endplatform

#platform: Use_Standalone
	CheckResult = true
#endplatform

#platform: Mobile
	if Options.AttractMode == false
		LoadSpriteSheet("Global/DPad.gif")

		Object[25].Type = TypeName[Debug Mode]
		Object[25].Priority		 = PRIORITY_ACTIVE
		Object[25].DrawOrder	 = 6
		Object[25].InkEffect	 = INK_ALPHA
		Object[25].Fade 		 = 0
		Object[25].PauseFade	 = 0
		Object[25].PauseXPos	 = Screen.XSize
		Object[25].PauseXPos	-= 68
		Object[25].AButtonXPos	 = Screen.XSize

		if Engine.PlatformID == RETRO_WP7
			Object[25].AButtonXPos  -= 69
			Object[25].DPadXPos		 = 24
			Options.DPadX			 = 56
		else
			Object[25].AButtonXPos  -= 61
			Object[25].DPadXPos		 = 16
			Options.DPadX			 = 48
		end if

		// This script is only ever used in normal stages, Special Stages have their own TouchControls script
		// and yet, this check exists anyway...
		if Stage.ActiveList == SPECIAL_STAGE
			Object[25].PauseXPos += 42
		end if

		SpriteFrame(0, 0, 64, 64, 0, 64)		// #0  - D-Pad
		SpriteFrame(26, 0, 12, 25, 26, 0)		// #1  - Up
		SpriteFrame(26, 38, 12, 26, 26, 38)		// #2  - Down
		SpriteFrame(0, 25, 26, 13, 0, 25)		// #3  - Left
		SpriteFrame(38, 25, 26, 13, 38, 25)		// #4  - Right
		SpriteFrame(26, 0, 12, 25, 116, 64)		// #5  - Pressed Up
		SpriteFrame(26, 38, 12, 26, 116, 102)	// #6  - Pressed Down
		SpriteFrame(0, 25, 26, 13, 89, 101)		// #7  - Pressed Left
		SpriteFrame(38, 25, 26, 13, 89, 115)	// #8  - Presset Right
		SpriteFrame(0, 0, 48, 48, 65, 0)		// #9  - A Button
		SpriteFrame(0, 0, 48, 48, 65, 49)		// #10 - Pressed A Button
		SpriteFrame(0, 0, 16, 16, 72, 111)		// #11 - Pause
	end if
#endplatform

	// set the debug mode control style
	Debug.S3kStyle = false
end sub


// ========================
// Editor Subs
// ========================

sub RSDKDraw
	DrawSprite(0)
end sub


sub RSDKLoad
	LoadSpriteSheet("Global/Items.gif")
	SpriteFrame(-8, -8, 16, 16, 1, 1)			// #0  - Ring

	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end sub
